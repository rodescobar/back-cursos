openapi: 3.0.0
info:
  title: API de Gerenciamento de Cursos
  version: 1.0.0
  description: API para gerenciamento de cursos e aulas
    - https://back-cursos.vercel.app

servers:
  - url: https://back-cursos.vercel.app
  - url: http://localhost:3000

paths:
  /cursos/deletar-todos:
    delete:
      tags:
        - Cursos
      summary: Deleta todos os cursos do usuário
      description: Remove todos os cursos cadastrados no banco do usuário. Esta operação não pode ser desfeita.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Todos os cursos foram deletados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Todos os cursos foram deletados com sucesso"
        401:
          description: Não autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Não autorizado"
        500:
          description: Erro ao deletar cursos
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Erro ao deletar cursos"

  /usuario/registro:
    post:
      tags:
        - Usuário
      summary: Registra novo usuário e cria seu banco de dados
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                  example: "joao"
                senha:
                  type: string
                  example: "123456"
                email:
                  type: string
                  example: "joao@email.com"
                nome:
                  type: string
                  example: "João Silva"
      responses:
        200:
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Usuário criado com sucesso"
        400:
          description: Usuário já existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Usuário já existe"

  /usuario/login:
    post:
      tags:
        - Usuário
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                  example: "joao"
                senha:
                  type: string
                  example: "123456"
      responses:
        200:
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  usuario:
                    type: object
                    properties:
                      nome:
                        type: string
                      email:
                        type: string
                      usuario:
                        type: string
        401:
          description: Usuário ou senha inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Usuário ou senha inválidos"

  /usuario/perfil:
    get:
      tags:
        - Usuário
      summary: Recupera dados do usuário logado
      security:
        - bearerAuth: []
      responses:
        200:
          description: Dados do usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        401:
          description: Não autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Não autorizado"

  /usuario/atualizar:
    put:
      tags:
        - Usuário
      summary: Atualiza dados do usuário
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: "João Silva"
                email:
                  type: string
                  example: "joao@email.com"
      responses:
        200:
          description: Dados atualizados com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Dados atualizados com sucesso"
                  usuario:
                    $ref: '#/components/schemas/Usuario'
        401:
          description: Não autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Não autorizado"

  /usuario/alterar-senha:
    post:
      tags:
        - Usuário
      summary: Altera senha do usuário
      description: Altera a senha do usuário autenticado
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - senhaAtual
                - novaSenha
              properties:
                senhaAtual:
                  type: string
                  description: Senha atual do usuário
                  example: "123456"
                novaSenha:
                  type: string
                  description: Nova senha desejada
                  example: "654321"
      responses:
        200:
          description: Senha alterada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Senha alterada com sucesso"
        401:
          description: Senha atual incorreta ou não autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Senha atual incorreta"
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Erro ao alterar senha"

  /cursos:
    get:
      tags:
        - Cursos
      summary: Lista todos os cursos
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de cursos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Curso'
          
    post:
      tags:
        - Cursos
      summary: Cria novo curso
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curso'
      responses:
        200:
          description: Curso criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Curso criado com sucesso"
                  curso:
                    $ref: '#/components/schemas/Curso'
        400:
          description: Erro na criação do curso
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Curso já existe"

  /cursos/{id}:
    get:
      tags:
        - Cursos
      summary: Busca um curso pelo ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Curso encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curso'
        404:
          description: Curso não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Curso não encontrado"

    put:
      tags:
        - Cursos
      summary: Atualiza um curso
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curso'
      responses:
        200:
          description: Curso atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Curso atualizado com sucesso"
                  curso:
                    $ref: '#/components/schemas/Curso'
        404:
          description: Curso não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Curso não encontrado"

    delete:
      tags:
        - Cursos
      summary: Remove um curso
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Curso removido com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Curso deletado com sucesso"
        404:
          description: Curso não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  erro:
                    type: string
                    example: "Curso não encontrado"

components:
  schemas:
    Usuario:
      type: object
      properties:
        usuario:
          type: string
          example: "joao"
        email:
          type: string
          example: "joao@email.com"
        nome:
          type: string
          example: "João Silva"
        createdAt:
          type: string
          format: date-time

    Aula:
      type: object
      properties:
        numero:
          type: number
          example: 1
        titulo:
          type: string
          example: "Introdução ao JavaScript"
        descricao:
          type: string
          example: "Nesta aula você aprenderá os conceitos básicos de JavaScript"
        tempo:
          type: string
          example: "15:00"
        createdAt:
          type: string
          format: date-time

    Curso:
      type: object
      properties:
        titulo:
          type: string
          example: "JavaScript Completo"
        descricao:
          type: string
          example: "Curso completo de JavaScript do básico ao avançado"
        imagens:
          type: array
          items:
            type: string
          example: ["http://exemplo.com/js1.png", "http://exemplo.com/js2.png"]
        aulas:
          type: array
          items:
            $ref: '#/components/schemas/Aula'
        createdAt:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT